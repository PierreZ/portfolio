<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pierre Zemb</title>
    <link>https://pierrezemb.fr/</link>
    <description>Recent content on Pierre Zemb</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;http://creativecommons.org/licenses/by/3.0/&#34;&gt;Some Rights Reserved&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 16 Oct 2020 01:22:36 +0100</lastBuildDate><atom:link href="https://pierrezemb.fr/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Record-Layer 101</title>
      <link>https://pierrezemb.fr/talks/record-layer-101/</link>
      <pubDate>Fri, 16 Oct 2020 01:22:36 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/talks/record-layer-101/</guid>
      <description>Abstract The FoundationDB Record Layer is an open source library that provides a record-oriented datastore with semantic similar to a relational database, implemented on top of FoundationDB. It is highly used within Apple by CloudKit, Apple‚Äôs cloud backend service to host billions of independent databases, many with a common schema.
In this talk, we will dig into the paper and the library&amp;rsquo;s concepts and feature. You will also discover how to use the library from a developer&amp;rsquo;s point-of-view, with examples taken from ETCD-Layer and Record-Store.</description>
    </item>
    
    <item>
      <title>10 years of programming and counting üöÄ</title>
      <link>https://pierrezemb.fr/posts/ten-years-programming/</link>
      <pubDate>Wed, 30 Sep 2020 00:24:27 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/posts/ten-years-programming/</guid>
      <description>I‚Äôve just realized that I‚Äôve spent the last decade programming ü§Ø While 2020 feels like a strange year, I thought it would be nice to write down a retrospective of the last 10 years üóì
Learning to program üë®üèª‚Äçüíª I wrote my first Hello, world program somewhere around September 2010, when I started my engineering school to do some electronics, but that C language got me. I spent 6 months struggling to understand pointers and memory.</description>
    </item>
    
    <item>
      <title>Announcing Record-Store, a new (experimental) place for your data</title>
      <link>https://pierrezemb.fr/posts/announcing-record-store/</link>
      <pubDate>Wed, 23 Sep 2020 10:24:27 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/posts/announcing-record-store/</guid>
      <description>TL;DR: I&amp;rsquo;m really happy to announce my latest open-source project called Record-Store üöÄ Please check it out on https://pierrez.github.io/record-store.
What? Record-Store is a layer running on top of FoundationDB. It provides abstractions to create, load and deletes customer-defined data called records, which are hold into a RecordSpace. We would like to have this kind of flow for developers:
 Opening RecordSpace, for example prod/users Create a protobuf definition which will be used as schema Upsert schema Push records Query records delete records  You need another KeySpace to store another type of data, or maybe a KeySpace dedicated to production env?</description>
    </item>
    
    <item>
      <title>Diving into ETCD&#39;s linearizable reads</title>
      <link>https://pierrezemb.fr/posts/diving-into-etcd-linearizable/</link>
      <pubDate>Fri, 18 Sep 2020 05:24:27 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/posts/diving-into-etcd-linearizable/</guid>
      <description>Diving Into is a blogpost serie where we are digging a specific part of the project&amp;rsquo;s basecode. In this episode, we will digg into the implementation behind ETCD&amp;rsquo;s Linearizable reads.
 What is ETCD? From the official website:
 etcd is a strongly consistent, distributed key-value store that provides a reliable way to store data that needs to be accessed by a distributed system or cluster of machines. It gracefully handles leader elections during network partitions and can tolerate machine failure, even in the leader node.</description>
    </item>
    
    <item>
      <title>Notes about Raft&#39;s paper</title>
      <link>https://pierrezemb.fr/posts/notes-about-raft/</link>
      <pubDate>Thu, 30 Jul 2020 07:24:27 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/posts/notes-about-raft/</guid>
      <description>Notes About is a blogpost serie you will find a lot of links, videos, quotes, podcasts to click on about a specific topic. Today we will discover Raft&amp;rsquo;s paper called &amp;lsquo;In Search of an Understandable Consensus Algorithm&amp;rsquo;.
 As I&amp;rsquo;m digging into ETCD, I needed to refresh my memory about Raft. I started by reading the paper located here and I&amp;rsquo;m also playing with the amazing Raft labs made by PingCAP.</description>
    </item>
    
    <item>
      <title>Building a Messaging Solutions for OVHcloud with Apache Pulsar</title>
      <link>https://pierrezemb.fr/talks/messaging-solution-pulsar/</link>
      <pubDate>Tue, 16 Jun 2020 01:22:36 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/talks/messaging-solution-pulsar/</guid>
      <description>Abstract OVHcloud is the biggest European cloud provider. From dedicated servers to Managed Kubernetes, from VMware¬Æ based Hosted Private Cloud to OpenStack-based Public Cloud, we have over 1.4 million customers worldwide.
Internally, we have been running Apache Kafka for years, and despite all the skills obtained operating multiples clusters with millions of messages per second, we decided to shift and build the foundation of our &amp;lsquo;topic-as-a-service&amp;rsquo; product called ioStream on Apache Pulsar.</description>
    </item>
    
    <item>
      <title>üá´üá∑ BigData Hebdo 99 : Apache Pulsar &amp; Kafka on Pulsar</title>
      <link>https://pierrezemb.fr/podcasts/bdh-99/</link>
      <pubDate>Wed, 06 May 2020 01:22:36 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/podcasts/bdh-99/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Introducing Kafka-on-Pulsar: Bring native Kafka protocol support to Apache Pulsar</title>
      <link>https://pierrezemb.fr/talks/announcing-kop/</link>
      <pubDate>Tue, 31 Mar 2020 01:22:36 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/talks/announcing-kop/</guid>
      <description>Abstract Kafka-on-Pulsar has been one of the most anticipated features in the Pulsar ecosystem. The Kafka-on-Pulsar project was initiated by StreamNative and the OVHCloud team quickly joined the project to collaborate on its development. Kafka-on-Pulsar enables Kafka applications to leverage Pulsar‚Äôs powerful features, such as streamlined operations with enterprise-grade multi-tenancy, without modifying code.
In this webinar, Sijie Guo, from StreamNative, and Pierre Zemb, from OVHCloud, will introduce KoP and discuss the following:</description>
    </item>
    
    <item>
      <title>Announcing Kafka-on-Pulsar: bring native Kafka protocol support to Apache Pulsar</title>
      <link>https://pierrezemb.fr/posts/announcing-kop/</link>
      <pubDate>Tue, 24 Mar 2020 10:24:27 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/posts/announcing-kop/</guid>
      <description>This is a repost from OVHcloud&amp;rsquo;s official blogpost., please read it there to support my company. Thanks Horacio Gonzalez for the awesome drawings!
 This post has been published on both the StreamNative and OVHcloud blogs and was co-authored by Sijie Guo, Jia Zhai and Pierre Zemb. Thanks Horacio Gonzalez for the illustrations!
We are excited to announce that StreamNative and OVHcloud are open-sourcing &amp;ldquo;Kafka on Pulsar&amp;rdquo; (KoP). KoP brings the native Apache Kafka protocol support to Apache Pulsar by introducing a Kafka protocol handler on Pulsar brokers.</description>
    </item>
    
    <item>
      <title>üá´üá∑ BigData Hebdo 93 : FoundationDB</title>
      <link>https://pierrezemb.fr/podcasts/bdh-93/</link>
      <pubDate>Mon, 17 Feb 2020 01:22:36 +0100</pubDate>
      
      <guid>https://pierrezemb.fr/podcasts/bdh-93/</guid>
      <description> </description>
    </item>
    
  </channel>
</rss>
