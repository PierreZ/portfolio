<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Pierre Zemb&#x27;s Blog - expiration</title>
      <link>https://pierrezemb.fr</link>
      <description>Pierre Zemb personal blog</description>
      <generator>Zola</generator>
      <language>en</language>
      <atom:link href="https://pierrezemb.fr/tags/expiration/rss.xml" rel="self" type="application/rss+xml"/>
      <lastBuildDate>Mon, 27 May 2019 22:07:11 +0200</lastBuildDate>
      <item>
          <title>Playing with TTL in HBase</title>
          <pubDate>Mon, 27 May 2019 22:07:11 +0200</pubDate>
          <author>Pierre Zemb</author>
          <link>https://pierrezemb.fr/posts/ttl-hbase/</link>
          <guid>https://pierrezemb.fr/posts/ttl-hbase/</guid>
          <description xml:base="https://pierrezemb.fr/posts/ttl-hbase/">&lt;header class=&quot;row text-center header&quot;&gt;
   &lt;img src=&quot;&#x2F;images&#x2F;hbase-data-model&#x2F;hbase.jpg&quot; alt=&quot;HBase Image&quot; class=&quot;text-center&quot;&gt;
&lt;&#x2F;header&gt;
&lt;p&gt;Among all features provided by HBase, there is one that is pretty handy to deal with your data&#x27;s lifecyle: the fact that every cell version can have &lt;strong&gt;Time to Live&lt;&#x2F;strong&gt; or TTL. Let&#x27;s dive into the feature!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;time-to-live-ttl&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#time-to-live-ttl&quot; aria-label=&quot;Anchor link for: time-to-live-ttl&quot;&gt;ðŸ”—&lt;&#x2F;a&gt;Time To Live (TTL)&lt;&#x2F;h1&gt;
&lt;p&gt;Let&#x27;s read the doc first!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;ColumnFamilies can set a TTL length in seconds, and &lt;strong&gt;HBase will automatically delete rows once the expiration time is reached&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hbase.apache.org&#x2F;book.html#ttl&quot;&gt;HBase Book: Time To Live (TTL)&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s play with it! You can easily start an standalone HBase by following &lt;a href=&quot;https:&#x2F;&#x2F;hbase.apache.org&#x2F;book.html#quickstart&quot;&gt;the HBase Book&lt;&#x2F;a&gt;. Once your standalone cluster is started, we can get started:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;bin&#x2F;hbase&lt;&#x2F;span&gt;&lt;span&gt; shell
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:001:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; create &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, {&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;NAME&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; =&amp;gt; &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TTL&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39; =&amp;gt; 30} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# 30 sec
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now that our test_table is created, we can &lt;code&gt;put&lt;&#x2F;code&gt; some data on it:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:002:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; put &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row123&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TTL Demo&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And you can &lt;code&gt;get&lt;&#x2F;code&gt; it with:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:003:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; get &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row123&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COLUMN&lt;&#x2F;span&gt;&lt;span&gt;                             CELL
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;                          timestamp=1558366581134, value=TTL Demo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; row(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; 0.0080 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here&#x27;s our row! But if you wait a bit, it will &lt;strong&gt;disappear&lt;&#x2F;strong&gt; thanks to the TTL:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:004:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; get &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row123&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COLUMN&lt;&#x2F;span&gt;&lt;span&gt;                             CELL
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; row(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; 0.0220 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It has been filtered from the result, but the data is still here.  You can trigger a &lt;strong&gt;raw&lt;&#x2F;strong&gt; scan to check:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:002:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; scan &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, {RAW =&amp;gt; true}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ROW&lt;&#x2F;span&gt;&lt;span&gt;                                COLUMN+CELL
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;row123&lt;&#x2F;span&gt;&lt;span&gt;                            column=cf1:desc, timestamp=1558366581134, value=TTL Demo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; row(s) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; 0.3280 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It will be removed only when a &lt;strong&gt;major-compaction&lt;&#x2F;strong&gt; will occur. As we are playing, we can:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;force the memstore to be &lt;strong&gt;flushed as HFiles&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;force the &lt;strong&gt;compaction&lt;&#x2F;strong&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
You may have heard about &lt;b&gt;&lt;a target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;blogs.apache.org&#x2F;hbase&#x2F;entry&#x2F;accordion-hbase-breathes-with-in&quot;&gt;Accordion&lt;&#x2F;a&gt;&lt;&#x2F;b&gt;, the new feature in HBase 2. If you are playing with HBase 2, you can enable it by following &lt;a target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;hbase.apache.org&#x2F;book.html#inmemory_compaction&quot;&gt;this link&lt;&#x2F;a&gt; and run &lt;b&gt;compactions directly in the MemStores.&lt;&#x2F;b&gt;
&lt;&#x2F;div&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:014:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; flush &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Took&lt;&#x2F;span&gt;&lt;span&gt; 0.4456 seconds    
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:015:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; compact &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Took&lt;&#x2F;span&gt;&lt;span&gt; 0.0468 seconds
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# wait a bit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:016:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; scan &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, {RAW =&amp;gt; true}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ROW&lt;&#x2F;span&gt;&lt;span&gt;                            COLUMN+CELL
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt; row(s)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Took&lt;&#x2F;span&gt;&lt;span&gt; 0.0060 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;how-does-it-works&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#how-does-it-works&quot; aria-label=&quot;Anchor link for: how-does-it-works&quot;&gt;ðŸ”—&lt;&#x2F;a&gt;How does it works?&lt;&#x2F;h1&gt;
&lt;p&gt;As always, the truth is held by the documentation:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A {row, column, version} tuple exactly specifies a cell in HBase. Itâ€™s possible to have an unbounded number of cells where the row and column are the same but the cell address differs only in its version dimension.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;While rows and column keys are expressed as bytes, &lt;strong&gt;the version is specified using a long integer&lt;&#x2F;strong&gt;. Typically &lt;strong&gt;this long contains time instances&lt;&#x2F;strong&gt; such as those returned by java.util.Date.getTime() or &lt;strong&gt;System.currentTimeMillis()&lt;&#x2F;strong&gt;,&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;hbase.apache.org&#x2F;book.html#versions&quot;&gt;HBase Book: Versions&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You may have seen it during our scan earlier, there is a &lt;strong&gt;timestamp associated&lt;&#x2F;strong&gt; with the version of the cell:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:003:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; get &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row123&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COLUMN&lt;&#x2F;span&gt;&lt;span&gt;                             CELL
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;                          timestamp=1558366581134, value=TTL Demo
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#                           here  ^^^^^^^^^^^^^^^^^^^^^^^ 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Hbase used the &lt;code&gt;System.currentTimeMillis()&lt;&#x2F;code&gt; at ingest time to add it. During scanner and compaction, as time went by, &lt;strong&gt;there was more than TTL seconds between the cell version and now, so the row was discarded&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now the real question is: &lt;strong&gt;can you set it by yourself and be real Time-Lord&lt;&#x2F;strong&gt; (of HBase)?&lt;&#x2F;p&gt;
&lt;p&gt;The reponse is &lt;em&gt;yes!&lt;&#x2F;em&gt; There is also a bit of a warning a bit &lt;a href=&quot;https:&#x2F;&#x2F;hbase.apache.org&#x2F;book.html#_explicit_version_example&quot;&gt;below:&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Caution:&lt;&#x2F;em&gt; the version timestamp is used internally by HBase for things like &lt;strong&gt;time-to-live calculations&lt;&#x2F;strong&gt;. Itâ€™s usually best to avoid setting this timestamp yourself. Prefer using a separate timestamp attribute of the row, or have the timestamp as a part of the row key, or both.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Let&#x27;s try it:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;date&lt;&#x2F;span&gt;&lt;span&gt; +%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;s -d &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;+2 min&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1558472441  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# don&amp;#39;t forget to add 3 zeroes as the time need to be in millisecond!
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;.&#x2F;bin&#x2F;hbase&lt;&#x2F;span&gt;&lt;span&gt; shell
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:001:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; put &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;row1234&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;cf1:desc&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;timestamp Demo&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;, 1558472441000  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;hbase&lt;&#x2F;span&gt;&lt;span&gt;(main)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;:044:0&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; scan &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test_table&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ROW&lt;&#x2F;span&gt;&lt;span&gt;                            COLUMN+CELL
&lt;&#x2F;span&gt;&lt;span&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;row1234&lt;&#x2F;span&gt;&lt;span&gt;                       column=cf1:desc, timestamp=1558473315, value=timestamp Demo
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt; row(s)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Took&lt;&#x2F;span&gt;&lt;span&gt; 0.0031 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Notice that we are using a timestamp at the end of the &lt;code&gt;put&lt;&#x2F;code&gt; method? This will &lt;strong&gt;add the desired timestamp to the version&lt;&#x2F;strong&gt;. Which means that &lt;strong&gt;your application can control when your version will be removed, even with a TTL on your column-qualifier.&lt;&#x2F;strong&gt; You just need to compute a timestamp like this:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ts = now - ttlCF + desiredTTL&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;strong&gt;Thank you&lt;&#x2F;strong&gt; for reading my post! Feel free to react to this article, I am also available on &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PierreZ&quot;&gt;Twitter&lt;&#x2F;a&gt; if needed.&lt;&#x2F;p&gt;
</description>
          <category domain="tag">database</category>
          <category domain="tag">hbase</category>
          <category domain="tag">storage</category>
          <category domain="tag">expiration</category>
      </item>
    </channel>
</rss>
